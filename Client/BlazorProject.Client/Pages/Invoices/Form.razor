@page "/Invoices/Form"
@page "/Invoices/Form/{id:int}"
@inject IService<InvoiceDto> _invoiceService
@inject IService<CustomerDto> _customerService
@inject NavigationManager _navManager
<div class="col-12 mb-lg-0 mb-6">
    <div class="card invoice-preview-card p-sm-12 p-6">
        <EditForm Model="Model">

        <div class="card-body invoice-preview-header rounded p-6">
            <div class="d-flex flex-wrap flex-column flex-sm-row justify-content-between text-heading">
                <div class="mb-md-0 mb-6">
                    <div class="d-flex svg-illustration align-items-center gap-3 mb-6">
                        <span class="app-brand-logo demo">
                            <span style="color:var(--bs-primary);">
                                <img src="/codeZoneLogo.webp" alt="Alternate Text" />
                            </span>
                        </span>
                        
                    </div>
                    
                </div>
                <div class="col-md-5 col-8 pe-0 ps-0 ps-md-2">
                    <dl class="row mb-0 gx-4">
                        <dt class="col-sm-5 mb-2 d-md-flex align-items-center justify-content-start">
                            <span class="h5 text-capitalize mb-0 text-nowrap">Code</span>
                        </dt>
                        <dd class="col-sm-7">
                            <div class="input-group input-group-sm input-group-merge">
                                <span class="input-group-text">#</span>
                                <InputText type="text" @bind-Value=Model.Code  class="form-control" id="code" />
                            </div>
                        </dd>
                        @if (IsEdit)
                        {
                            <dt class="col-sm-5 mb-2 d-md-flex align-items-center justify-content-start">
                                <span class="fw-normal text-nowrap">Date Issued:</span>
                            </dt>
                            <dd class="col-sm-7">
                                <input type="text" disabled class="form-control form-control-sm invoice-date" placeholder="YYYY-MM-DD" />
                            </dd>
                        }
                        <dt class="col-sm-5 mb-2 d-md-flex align-items-center justify-content-start">
                            <span class="fw-normal text-nowrap">Invoice To:</span>
                        </dt>
                        <dd class="col-sm-7">
                                <AutoComplete @bind-Value="Model.CustomerName"
                                              TItem="CustomerDto"
                                              DataProvider="CustomersDataProvider"
                                              PropertyName="Name"
                                              Placeholder="customer"
                                              OnChanged="(CustomerDto customer) => OnAutoCompleteChanged(customer)" />
                        </dd>
                        <dt class="col-sm-5 mb-2 d-md-flex align-items-center justify-content-start">
                            <span class="fw-normal text-nowrap">Net Amount:</span>
                        </dt>
                        <dd class="col-sm-7">
                            <div class="input-group input-group-sm input-group-merge disabled">
                                
                                <InputNumber @bind-Value="Model.NetAmount" type="number" class="form-control" disabled id="NetAmount" />
                            </div>
                        </dd>
                    </dl>
                </div>
            </div>
        </div>

        
        <hr class="mt-0 mb-6">
        <div class="card-body pt-0 px-0">
            <form class="source-item">
                <div class="mb-4" data-repeater-list="group-a">
                    <div class="repeater-wrapper pt-0 pt-md-9" data-repeater-item>
                            @if (Model.InvoiceLines != null)
                            {
                                
                            @foreach(var invoiceLine in Model.InvoiceLines)
                        {
                            <div class="d-flex border rounded position-relative pe-0">
                                <div class="row w-100 p-5 gx-5">
                                    <div class="col-md-4 col-12 mb-md-0 mb-4">
                                        <p class="h6 repeater-title">Item</p>
                                        <select class="form-select item-details mb-5">
                                            <option selected disabled>App Design</option>
                                            <option value="App Customization">App Customization</option>
                                            <option value="ABC Template">ABC Template</option>
                                            <option value="App Development">App Development</option>
                                        </select>
                                   
                                    </div>
                                    <div class="col-md-3 col-12 mb-md-0 mb-4">
                                        <p class="h6 repeater-title">Amount</p>
                                        <input type="text" class="form-control invoice-item-price mb-5" placeholder="00" min="12" />
                                    
                                    </div>
                                    <div class="col-md-2 col-12 mb-md-0 mb-4">
                                        <p class="h6 repeater-title">Quantity</p>
                                        <input type="text" class="form-control invoice-item-qty" placeholder="1" min="1" max="50" />
                                    </div>
                                    <div class="col-md-3 col-12 pe-0">
                                        <p class="h6 repeater-title">Item Net Amount</p>
                                        <p class="mb-0 mt-2 text-heading">$24.00</p>
                                    </div>
                                    <div class="mb-4">
                                        <div class="d-flex border rounded position-relative pe-0">
                                            <div class="row w-100 p-5 gx-5">
                                                <div class="col-md-6 col-12 mb-md-0 mb-4">
                                                    <p class="h6 repeater-title">Tax</p>
                                                    <select class="form-select item-details mb-5">
                                                        <option selected disabled>App Design</option>
                                                        <option value="App Customization">App Customization</option>
                                                        <option value="ABC Template">ABC Template</option>
                                                        <option value="App Development">App Development</option>
                                                    </select>

                                                </div>
                                                <div class="col-md-3 col-12 mb-md-0 mb-4">
                                                    <p class="h6 repeater-title">Rate</p>
                                                    <div class="input-group input-group input-group-merge ">
                                                        <input type="number" class="form-control"  placeholder="3905" value="14.25" id="invoiceId" />
                                                        <span class="input-group-text">%</span>
                                                    </div>

                                                </div>
                                                <div class="col-md-2 col-12 mb-md-0 mb-4">
                                                    <p class="h6 repeater-title">Amount</p>
                                                    <input type="text" class="form-control invoice-item-qty" placeholder="1" min="1" max="50" />
                                                </div>
                                            

                                            </div>
                                            <div class="d-flex flex-column align-items-center justify-content-between border-start p-2">
                                                <i class="ri-close-line cursor-pointer" data-repeater-delete></i>
                                
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-12">
                                            <button type="button" class="btn btn-primary btn-sm" data-repeater-create><i class="ri-add-line ri-14px me-1"></i> Add Tax</button>
                                        </div>
                                    </div>
                                </div>

                                <div class="d-flex flex-column align-items-center justify-content-between border-start p-2">
                                    <i class="ri-close-line cursor-pointer" data-repeater-delete></i>
                                
                                </div>
                            </div>
                        }
                            }
                    </div>
                </div>
                <div class="row">
                    <div class="col-12">
                        <button type="button" class="btn btn-primary btn-sm" data-repeater-create><i class="ri-add-line ri-14px me-1"></i> Add Item</button>
                    </div>
                </div>
            </form>
        </div>
        </EditForm>

        
        
    </div>
</div>


@code {
    [Parameter]
    public int Id { get; set; }
    public InvoiceDto Model { get; set; } = new();
    public bool IsEdit { get; set; }
    protected async override Task OnParametersSetAsync()
    {
        if (Id != 0)
        {
            Model = await _invoiceService.GetOne(Id);
            if (Model != null)
                IsEdit = true;
        }
        base.OnParametersSet();
    }
    private async Task<AutoCompleteDataProviderResult<CustomerDto>> CustomersDataProvider(AutoCompleteDataProviderRequest<CustomerDto> request)
    {
        var customers = await _customerService.GetList("Name",request.Filter.Value); // API call
        return await Task.FromResult(new AutoCompleteDataProviderResult<CustomerDto> { Data = customers!, TotalCount = customers.Count() });
    }
    private void OnAutoCompleteChanged(CustomerDto customer)
    {
        // TODO: handle your own logic

        // NOTE: do null check
        Console.WriteLine($"'{customer?.Name}' with id {customer?.Id}' selected.");
    }

    // public TaxDto Model { get; set; } = new();
    // public bool IsEdit { get; set; }
    // protected async override Task OnParametersSetAsync()
    // {
    //     if (Id != 0)
    //     {
    //         Model = await _Service.GetOne(Id);
    //         if (Model != null)
    //             IsEdit = true;
    //     }
    //     base.OnParametersSet();
    // }
    // public async void Submit()
    // {
    //     if (IsEdit)
    //     {
    //         Model.Id = Id;
    //         await _Service.Update(Model);
    //     }
    //     else
    //     {
    //         var id = await _Service.Create(Model);
    //         if (id != null)
    //         {
    //             _navManager.NavigateTo($"/Taxes/Form/{id}");
    //         }
    //     }
    // }
    // public async Task Delete()
    // {
    //     if (await _Service.Delete(Id))
    //         _navManager.NavigateTo($"/Taxes");
    // }
}
